<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.repository.MemberRepository">

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO member (oauthId, nickName, email)
        VALUES (#{oauthId}, #{nickName}, #{email})
    </insert>
    <insert id="doJoin" parameterType="map">
        INSERT INTO `member`
        SET regDate = NOW(),
		updateDate = NOW(),
		loginId = #{loginId},
            loginPw = #{loginPw},
            `name` = #{name},
            nickName = #{nickName},
            email = #{email}
    </insert>

    <select id="getLastInsertId" parameterType="long">
        SELECT LAST_INSERT_ID()
    </select>

    <select id="getMemberById" parameterType="java.lang.Long"
            resultType="com.example.demo.vo.Member">
        SELECT * FROM `member`
        WHERE id = #{id}
    </select>

    <select id="isJoinableLogInId" parameterType="String">
        SELECT COUNT(*) FROM `member`
        WHERE loginId = #{loginId}
    </select>

    <select id="isExistsNameNEmail" parameterType="String">
        SELECT COUNT(*) FROM `member`
        WHERE `name` = #{name} AND
            email = #{email}
    </select>

    <select id="getMemberByLoginId" parameterType="String"
            resultType="com.example.demo.vo.Member">
        SELECT * FROM `member`
        WHERE loginId = #{loginId}
    </select>

    <update id="modifyMember" parameterType="map">
        UPDATE `member`
        <set>
            <if test="loginId != null and loginId != ''">loginId = #{loginId},</if>
            <if test="loginPw != null and loginPw != ''">loginPw = #{loginPw},</if>
            <if test="name != null and name != ''">`name` = #{name},</if>
            <if test="nickName != null and nickName != ''">nickName = #{nickName},</if>
            <if test="email != null and email != ''">email = #{email},</if>
            updateDate = NOW()
        </set>
        WHERE id = #{loginedMemberId}
    </update>

    <!-- 이메일로 회원 조회 -->
    <select id="findByEmail" resultType="com.example.demo.vo.Member">
        SELECT * FROM member WHERE email = #{email}
    </select>

    <!-- 새 회원 저장 -->
    <insert id="saveMember" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO member (nickName, email)
        VALUES (#{nickName}, #{email})
    </insert>

    <select id="getById" resultType="com.example.demo.vo.Member">
        SELECT * FROM member WHERE id = #{id}
    </select>

</mapper>